{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZAO,SAASC,cAAc,SAkB/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBAEN,IAAIC,EAAaC,OAAOH,EAAMI,cAAcd,MAAMe,OAClD,MAAMC,EAAYH,OAAOH,EAAMI,cAAcG,KAAKF,OAC5CG,EAAcL,OAAOH,EAAMI,cAAcK,OAAOJ,OAEpD,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EACpCtB,EAAcsB,EAAI,EAAGR,EAAaQ,EAAIJ,GACnCK,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoB3B,QAAeC,MAAU,IAKvDU,EAAMI,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        fulfill({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nform.addEventListener('submit', formSubmit);\n\nfunction formSubmit(event) {\n  event.preventDefault();\n\n  let firstDelay = Number(event.currentTarget.delay.value);\n  const stepValue = Number(event.currentTarget.step.value);\n  const amountValue = Number(event.currentTarget.amount.value);\n  // setTimeout(() => {\n    for (let i = 0; i < amountValue; i += 1) {\n      createPromise(i + 1, firstDelay + i * stepValue)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  // }, firstDelay);\n  event.currentTarget.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","fulfill","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","firstDelay","Number","currentTarget","value","stepValue","step","amountValue","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.34eb4cb7.js.map"}